plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.8.20'
    id "org.jetbrains.kotlin.plugin.serialization" version "1.8.10"
    id 'io.ktor.plugin' version '2.2.4'
}

group "ya.makhonko"
version "0.0.1"
mainClassName = "ya.makhonko.ApplicationKt"

def isDevelopment = project.ext.has("development")
applicationDefaultJvmArgs = ["-Dio.ktor.development=$isDevelopment"]

repositories {
    mavenCentral()
}

dependencies {
    implementation "io.ktor:ktor-server-core-jvm:$ktor_version"
    implementation "io.ktor:ktor-server-netty-jvm:$ktor_version"
    implementation "commons-cli:commons-cli:1.5.0"
    implementation "io.ktor:ktor-server-content-negotiation-jvm:$ktor_version"
    implementation "io.ktor:ktor-client-content-negotiation:$ktor_version"
    implementation "io.ktor:ktor-client-core-jvm:$ktor_version"
    implementation "io.ktor:ktor-client-cio-jvm:$ktor_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"
    testImplementation "io.ktor:ktor-server-tests-jvm:$ktor_version"
    implementation "io.ktor:ktor-serialization-kotlinx-json:$ktor_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    implementation "io.ktor:ktor-server-default-headers-jvm:$ktor_version"
    testImplementation "io.ktor:ktor-server-tests-jvm:$ktor_version"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.9.0"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.9.0"
}
test {
    useJUnitPlatform()
}
jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    manifest {
        attributes(
                'Main-Class': 'ya.makhonko.ApplicationKt'
        )
    }
}